---
# HOW TO USE:
# 1/  parameter: value will be used for all tasks
#
# 2/  parameter:
#       task: value will be used for a specific task only

# known tasks: [discrete, pendulum, fluidbox, attractor]

# ------------------
# -----  DATA  -----
# ------------------

dataset_type: koopman

# -------------------
# -----  MODEL  -----
# -------------------

model_type: koopman

## omega net (auxiliary function)
num_complex_pairs:
  discrete: 0

num_real:
  discrete: 2

width_omega_complex:
  discrete: [10, 10, 10]

widths_omega_real:
  discrete: [10, 10, 10]

# encoder architecture
encoder_widths:
  discrete: [30, 30] # first dimension is input_dim, and the last dimension is inferred as latent_dim = num_real + 2 * num_complex

decoder_widths:
  discrete: [30, 30] # first dimension is latent_dim, and the last dimension is inferred input_dim

num_shifts:
  discrete: 30

# number of evolutions in latent space to compute (authors assume sequence_length-1 in all their experiments)
num_shifts_middle:
  discrete: 50

hidden_layers:
  discrete: 2
  pendulum: 2
  attractor: 2
  fluidbox: 2

hidden_dim:
  discrete: 128
  pendulum: 128
  fluidbox: 128
  attractor: 128

hidden_layers_aux:
  discrete: 1
  pendulum: 1
  fluidbox: 1
  attractor: 1

hidden_dim_aux:
  discrete: 64
  pendulum: 64
  fluidbox: 64
  attractor: 64

latent_dim:
  discrete: 2
  pendulum: 3
  fluidbox: 3
  attractor: 3

loss_type: koopman # loss processing scheme

losses: # individual loss functions to use
  discrete:
    - reconstruction
    - linear
    - prediction
    - inf_norm
    - l2
  pendulum:
    - reconstruction
    - linear
    - prediction
    - inf_norm
    - l2
  fluidbox:
    - reconstruction
    - linear
    - prediction
  attractor:
    - reconstruction
    - linear
    - prediction
  density:
    - reconstruction
    - linear
    - prediction
    - inf_norm
    - l2

weights:
  discrete:
    reconstruction: 0.1
    prediction: 0.1
    linear: 1
    inf_norm: 1e-7
    l2: 1e-15
  pendulum:
    reconstruction: 1
    koopman: 1
    prediction: 1
  fluidbox:
    reconstruction: 1
    koopman: 1
    prediction: 1
  attractor:
    reconstruction: 1
    koopman: 1
    prediction: 1

# ----------------------
# -----  TRAINING  -----
# ----------------------

limit: # limit the number of samples loaded ; <=0 means no limit
  train: -1
  val: -1
  test: -1

output_path: ./runs/v0

batch_size: 256
workers: 4
epochs: 20

optimizer:
  name: adam
  lr: 0.0001
  scheduler: plateau

dropout: 0.3

comet:
  use: true
  project_name: aiphysim
  workspace: vict0rsch

early: # early_stopping params
  patience: 10
  min_delta: 0.0

# ------------------------
# -----  EVALUATION  -----
# ------------------------

val_trajectories:
  n: 20 # number of validation trajectories to plot
  length: -1 # validation trajectory length ; <0 => seq. len.
  n_per_plot: 10

metric_type:
  spacetime: spacetime

metrics:
  spacetime:
    - time_mse
